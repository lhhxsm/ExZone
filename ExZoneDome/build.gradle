apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'

def debugTime() {
    return new Date().format("HH-mm-ss", TimeZone.getTimeZone("UTC"))
}
def releaseTime() {
    return new Date().format("yyyy-MM-dd", TimeZone.getTimeZone("UTC"))
}
Properties props = new Properties()
props.load(new FileInputStream(file("config.properties")))

android {
    compileSdkVersion 24
    buildToolsVersion "24.0.3"

    defaultConfig {
        applicationId "com.exzone.demo"
        minSdkVersion 15
        targetSdkVersion 24
        versionCode 1
        versionName "1.0"
    }
    signingConfigs {//签名的配置
        release {
            keyAlias props['KEY_ALIAS']
            keyPassword props['KEY_PASSWORD']
            storeFile file(props['KEYSTORE_FILE'])
            storePassword props['KEYSTORE_PASSWORD']

//            storeFile file("签名文件名称.jks")
//            storePassword '密码'
//            keyAlias '签名文件别名'
//            keyPassword '密码'
        }
        debug{
            keyAlias props['KEY_ALIAS']
            keyPassword props['KEY_PASSWORD']
            storeFile file(props['KEYSTORE_FILE'])
            storePassword props['KEYSTORE_PASSWORD']
        }
    }
    buildTypes {
        debug {
            minifyEnabled false//是否启动混淆
            zipAlignEnabled false//是否启动zipAlign
            shrinkResources false//是否移除无用的resource文件
            signingConfig signingConfigs.debug//打包命令行：gradlew assembleDebug
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            applicationVariants.all { variant ->
                if (variant.buildType.name.equals('debug')) {
                    variant.outputs.each { output ->
                        def outputFile = output.outputFile
                        if (outputFile != null && outputFile.name.endsWith('.apk')) {
                            def fileName = "${debugTime()}_ExZone_${defaultConfig.versionName}_debug.apk"
                            //output.outputFile = new File(outputFile.parent, fileName)
                            //自定义APK的输出路径
                            output.outputFile = new File(props['OUTPUT_FILE'], fileName)
                        }
                    }
                }
            }
        }
        release {
            minifyEnabled false//是否启动混淆
            zipAlignEnabled false//是否启动zipAlign
            shrinkResources false//是否移除无用的resource文件
            signingConfig signingConfigs.release//打包命令行：gradlew assembleRelease
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            applicationVariants.all { variant ->
                if (variant.buildType.name.equals('release')) {
                    variant.outputs.each { output ->
                        def outputFile = output.outputFile
                        if (outputFile != null && outputFile.name.endsWith('.apk')) {
                            def fileName = "${releaseTime()}_ExZone_${defaultConfig.versionName}_release.apk"
                            //output.outputFile = new File(outputFile.parent, fileName)
                            //自定义APK的输出路径
                            output.outputFile = new File(props['OUTPUT_FILE'], fileName)
                        }
                    }
                }
            }
        }
    }

    lintOptions {
        //设置编译的lint开关，程序在build的时候，会执行lint检查，有任何的错误或者警告提示，都会终止构建
        warning 'InvalidPackage'
        abortOnError false
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    testCompile 'junit:junit:4.12'
    compile project(':ExZoneLib')
}
